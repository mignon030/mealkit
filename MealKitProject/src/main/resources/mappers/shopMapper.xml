<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace = "com.edu.mealkit.mapper.shopMapper">

	<!-- 반찬 상세보기 -->
	<select id="getGoodsView" parameterType="int" resultType="com.edu.mealkit.dto.MealkitDTO">
		SELECT *
		FROM mealkit
		WHERE mk_id = #{mk_id}
	</select>
	
	<!-- 재고수량 초과 금지 -->
	<select id="getBuy_count" resultType="int" parameterType="HashMap">
		SELECT mk_count
		FROM mealkit
		WHERE mk_id = #{mk_id}
		AND mk_count >= #{cnt}
	</select>
	
	<!-- kind_name별 목록 조회 -->
	<select id="goodslist" resultType="com.edu.mealkit.dto.MealkitDTO" >
		SELECT  mk_id,	mk_name,	mk_price,	mk_kind,	mk_count,	mk_img,		mk_content,		mk_discount_rate , mk_thumbImg
		FROM mealkit
		WHERE  mk_kind = #{kind_name}
		ORDER BY mk_id DESC
	</select>
	
	<!-- 목록대로 뿌려주기 -->
	<select id="allMeals" resultType="com.edu.mealkit.dto.MealkitDTO">
		SELECT *
		FROM mealkit
		ORDER BY mk_kind, mk_id DESC
	</select>
	
	<!-- 서치한 후에 뿌려주기 -->
	<select id="searchMeals" resultType="com.edu.mealkit.dto.MealkitDTO">
		SELECT *
		FROM mealkit
		WHERE 1=1
		<include refid="search"></include>
		ORDER BY mk_kind, mk_id DESC
	</select>
	
	<!-- 장바구니 개수 세기 -->
	<select id="getCartCnt" resultType="int" parameterType="String">
		SELECT COUNT(*)
		FROM cart
		WHERE buy_id = #{id}
	</select>
	
	<!-- 장바구니에 담기 -->
	<insert id="getCarts" parameterType="com.edu.mealkit.dto.CartDTO">
		INSERT INTO cart( buy_id, mk_id, mk_name, buy_price, mk_img, buy_count )
		VALUES ( #{buy_id}, #{mk_id}, #{mk_name}, #{buy_price}, #{mk_img}, #{buy_count} )
	</insert>
	
	<!-- 반찬 보기 
	<select id="listPage" resultType="com.edu.mealkit.dto.MealkitDTO" parameterType="com.edu.mealkit.dto.Criteria">
		SELECT  mk_id,	mk_name,	mk_price,	mk_kind,	mk_count,	mk_img,		mk_content,		mk_discount_rate
		 FROM ( SELECT mk_id, 
		               mk_name, 
		               mk_price, 
		               mk_kind, 
		               mk_count, 
		               mk_img,
		               mk_content,
		               mk_discount_rate,
		               ROW_NUMBER() OVER(ORDER BY mk_id DESC) AS RNUM
		         FROM mealkit
				 WHERE 1=1 
		         	<include refid="search"></include>
		                       ) mk
		WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY mk_id DESC
	</select> -->
	
	<sql id="search">
		<if test="searchType != null">
			<if test="searchType == 't'.toString()">AND mk_name LIKE CONCAT('%',#{keyword},'%')</if>
			<if test="searchType == 'c'.toString()">AND mk_kind LIKE CONCAT('%',#{keyword},'%')</if>
		</if>
	</sql>
	
	<!-- 반찬 총 개수 세기 CDATA : 들어가는 데이터를 문자열로 인식해주는거래 -->
	<select id="listCount" parameterType="com.edu.mealkit.dto.MealkitDTO" resultType="int">
		SELECT COUNT(mk_id)
		FROM mealkit
		WHERE 1=1
		<include refid="search"></include>	
		AND mk_id > 0
	</select>
	
	<!-- 장바구니 업데이트 -->
	<update id="goUpdate" parameterType="com.edu.mealkit.dto.CartDTO">
		UPDATE cart
		SET buy_price = #{buy_price}, buy_count = #{buy_count}
		WHERE cart_id = #{cart_id}
	</update>
	
	<!-- 장바구니 모든 상품 찾기 -->
	<select id="showCarts" parameterType="com.edu.mealkit.dto.CartDTO" resultType="com.edu.mealkit.dto.CartDTO">
		SELECT *
		FROM cart
		WHERE buy_id = #{buy_id}
	</select>
	
	<!-- 장바구니 선택주문 상품 찾기 -->
	<select id="choiceBuy" parameterType="com.edu.mealkit.dto.CartDTO" resultType="com.edu.mealkit.dto.CartDTO">
		SELECT *
		FROM cart
		WHERE buy_id = #{buy_id}
		AND cart_id = #{cart_id}
	</select>
	
	<!-- 장바구니 총 가격 찾기 -->
	<select id="sumCart" resultType="int" parameterType="String">
		SELECT SUM(buy_price)
		FROM cart
		WHERE buy_id = #{id}
	</select>
	
	<!-- 장바구니 선택한 상품들 총 가격 찾기 -->
	<select id="sumChoice" resultType="int" parameterType="int">
		SELECT buy_price
		FROM cart
		WHERE cart_id = #{num}
	</select>
	
	<!-- buy테이블에 상품들 담기 -->
	<insert id="insertPay" parameterType="com.edu.mealkit.dto.BuyDTO">
		INSERT INTO buy (order_id, delivery_name, delivery_tel, delivery_address, member_id, buy_count, buy_price, mk_name, mk_id)
		SELECT #{order_id}, #{delivery_name}, #{delivery_tel}, #{delivery_address}, buy_id, buy_count, buy_price, mk_name, mk_id
		FROM cart
		WHERE buy_id = #{member_id}
	</insert>
	
	<!-- buy테이블에 선택한 상품들 담기 -->
	<insert id="insertChoicePay" parameterType="com.edu.mealkit.dto.BuyDTO">
		INSERT INTO buy (order_id, delivery_name, delivery_tel, delivery_address, member_id, buy_count, buy_price, mk_name, mk_id)
		SELECT #{order_id}, #{delivery_name}, #{delivery_tel}, #{delivery_address}, buy_id, buy_count, buy_price, mk_name, mk_id
		FROM cart
		WHERE buy_id = #{member_id}
		AND mk_id = #{mk_id}
	</insert>
	
	<!-- 장바구니 모두 삭제 -->
	<delete id="allDelete" parameterType="String">
		DELETE FROM cart
		WHERE buy_id = #{id}
	</delete>
	
	<!-- 장바구니 선택한 거 삭제 -->
	<delete id="choiceDelete" parameterType="com.edu.mealkit.dto.CartDTO">
		DELETE FROM cart
		WHERE buy_id = #{buy_id}
		AND mk_id = #{mk_id}
	</delete>
	
	<!-- 구매한 상품 모두 찾기 -->
	<select id="getBuys" resultType="com.edu.mealkit.dto.BuyDTO" parameterType="String">
		SELECT *
		FROM buy
		WHERE member_id = #{id}
	</select>
	
	<!-- 선택 삭제 ~ 장바구니에서 -->
	<delete id="delete" parameterType="String">
		DELETE FROM cart
		WHERE cart_id = #{cart_id}
	</delete>
	
	<!-- 선택 삭제 ~ 찜에서 -->
	<delete id="zzDelete" parameterType="String">
		DELETE FROM zzim
		WHERE zzim_id = #{zzim_id}
	</delete>
	
	<!-- 찜한목록갯수세기 -->
	<select id="getZzimCnt" resultType="int" parameterType="String">
		select count(*)
		from zzim
		where buy_id = #{id}
	</select>
	
	<!-- 찜한상품에서 상품보기위해 값가져오기 -->
	<select id = "showZzims" parameterType="com.edu.mealkit.dto.ZzimDTO" resultType="com.edu.mealkit.dto.ZzimDTO">
		SELECT *
		FROM zzim
		WHERE buy_id = #{buy_id}
    </select>
    
    <!-- 찜한상품에 담기 -->
	<insert id="getZzims" parameterType="com.edu.mealkit.dto.ZzimDTO">
		INSERT INTO zzim(zzim_id, buy_id, mk_id, mk_name, mk_price, mk_img)
		VALUES (#{zzim_id}, #{buy_id}, #{mk_id}, #{mk_name}, #{mk_price}, #{mk_img})
	</insert>
	
	<!-- 찜여부체크 -->
	<select id="zzimCheck" resultType="int" parameterType="int">
		SELECT COUNT(*)
		FROM zzim 
		WHERE mk_id = #{mk_id} 
	</select>
	
	<!-- 찜한상품 중 선택한 것만 장바구니 담기 -->
	<insert id="zzimGo" parameterType="int">
		INSERT INTO cart(buy_id, mk_id, mk_name, buy_price, mk_img, buy_count)
		SELECT buy_id, mk_id, mk_name, mk_price, mk_img, 1
		FROM zzim
		WHERE zzim_id = #{zzim_id}
	</insert>
	
	<!-- 장바구니 상품 확인(동일한 상품 레코드 확인) -->
	<select id="countCarts" resultType="int">
		SELECT	COUNT(*)
		FROM	cart
		WHERE	buy_id 	= #{buy_id}
		AND		mk_id = #{mk_id}
	</select>

	<!-- 장바구니 상품 수량 변경(동일한 상품일 경우) -->
	<update id="updateCarts">
		UPDATE 	cart
		SET 	buy_count = buy_count + #{buy_count}, buy_price = buy_price + #{buy_price}
		WHERE 	buy_id = #{buy_id}
		AND 	mk_id = #{mk_id}
	</update>
	
	<!-- 리뷰쓰기 -->
	<insert id="writeReview" parameterType="com.edu.mealkit.dto.ReviewVO">
		INSERT INTO Review(r_mkno, r_writer, r_detail, star )
		VALUES (#{r_mkno}, #{r_writer}, #{r_detail}, #{star});
	</insert>
	
	<!-- 리뷰 삭제 -->
	<delete id="deleteReview" parameterType="com.edu.mealkit.dto.ReviewVO">
		DELETE FROM Review
		WHERE r_no = #{r_no}
	</delete>
	
	<!-- 리뷰 본인 확인 -->
	<select id="findResult" resultType="String" >
		SELECT r_writer
		FROM review 
		WHERE r_no = #{r_no}
	</select>
	
	<!-- 리뷰 목록 -->
	<select id="readReview" resultType="com.edu.mealkit.dto.ReviewVO">
		SELECT r_mkno, r_detail, r_writer, r_date, r_no, star
		FROM review
		WHERE r_mkno = #{r_mkno}
	</select>

	<!-- 리뷰 작성 제약 -->
	<select id="RJJ" resultType="int" parameterType="com.edu.mealkit.dto.BuyDTO">
		SELECT COUNT(*)
		FROM buy b, member m, mealkit mk
		WHERE b.member_id = m.id
		AND b.mk_id = mk.mk_id
		AND b.member_id = #{member_id} 
		AND b.mk_id = #{mk_id}
	</select>
	
	<!-- 재고수량가져오기 -->
    <select id = "productMkCount" resultType="com.edu.mealkit.dto.MealkitDTO">
		SELECT *
		FROM mealkit
		WHERE mk_id = #{mk_id}
    </select>
    
	<!-- 리뷰 목록 -->
	<select id="allReviewList" resultType="com.edu.mealkit.dto.ReviewVO"  >
		SELECT m.mk_img, r.R_mkno, m.mk_name, r.r_writer, r.r_detail, r.R_DATE, r.star 
		FROM ( SELECT  r_no, R_mkno, r_writer, r_detail, R_DATE, star, 
			ROW_NUMBER() OVER(ORDER BY R_no DESC) AS RNUM
			FROM review ) r join mealkit m
			ON r.r_mkno = m.mk_id
		WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY R_no DESC
		</select>
   
	<!-- 리뷰 페이징 카운트 -->
	<select id="reviewCount" resultType="int">
	<![CDATA[
		SELECT COUNT(r_no)
		FROM review
		WHERE r_no > 0
	]]>
	</select>
    

</mapper>